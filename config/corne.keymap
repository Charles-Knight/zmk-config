/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE_l 0
#define NAVI_L 1
#define FUNC_L 2
#define NUMB_L 3
#define SYMB_L 4
#define BLUE_L 5
#define MEDI_L 6

/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
                
                // spce_bkspc: space_backspace {
                //         compatible = "zmk,behavior-mod-morph";
                //         label = "SPACE_BACKSPACE";
                //         #binding-cells = <0>;
                //         bindings = <&lt SYMB_L SPACE>, <&lt SYMB_L BACKSPACE>;
                //         mods = <(MOD_LSFT)>;
                // };

                // tab_entr: tab_enter {
                //         compatible = "zmk,behavior-mod-morph";
                //         label = "TAB_ENTER";
                //         #binding-cells = <0>;
                //         bindings = <&lt SYMB_L TAB>, <&lt SYMB_L ENTER>;
                //         mods = <(MOD_RSFT)>;
                // };
        };

        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <14 15>;
                        bindings = <&kp ESC>;
                };

                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <15 16>;
                        bindings = <&kp TAB>;
                };

                combo_enter {
                        timeout-ms = <50>;
                        key-positions = <20 21>;
                        bindings = <&kp ENTER>;
                };

                combo_backspace {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp BACKSPACE>;
                };

                combo_gui {
                        timeout-ms = <50>;
                        key-positions = <16 17>;
                        bindings = <&kp LEFT_GUI>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

        default_layer {
                bindings = <
                        &none &kp Q        &kp W       &kp E      &kp R      &kp T            &kp Y &kp U        &kp I      &kp O       &kp P           &none
                        &none &hm LSHIFT A &hm LCTRL S &hm LALT D &hm LGUI F &kp G            &kp H &hm RGUI J   &hm RALT K &hm RCTRL L &hm RSHIFT SEMI &none
                        &none &kp Z        &kp X       &kp C      &kp V      &lt BLUE_L B     &kp N &lt MEDI_L M &kp COMMA  &kp DOT     &kp FSLH        &none
                                                &lt NAVI_L ESC &kp LSHFT &lt SYMB_L TAB     &lt SYMB_L SPACE &kp RSHFT &lt NAVI_L BACKSPACE
                >;
        };
        
        navigation_layer {
                bindings = <
                        &none &kp N1         &kp N2          &kp N3             &kp N4            &kp N5        &kp N6   &kp N7        &kp N8      &kp N9          &kp N0     &none
                        &none &hm LSHIFT ESC &hm LCTRL ENTER &hm LALT BACKSPACE &hm LGUI TAB      &kp LGUI      &kp LEFT &hm RGUI DOWN &hm RALT UP &hm RCTRL RIGHT &kp RSHIFT &none
                        &none &none          &kp LA(SPACE)   &kp LC(LG(LEFT))   &kp LC(LG(RIGHT)) &none         &none    &kp HOME      &kp PG_DN   &kp PG_UP       &kp END    &none
                                                                                    &trans &trans &trans        &trans &trans &trans
                >;
        };

        function_layer {
                bindings = <
                        &none &kp F1 &kp F2 &kp F3 &kp F4 &kp F5     &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &none
                        &none &none  &none  &none  &none  &none      &none  &none  &none  &none  &none   &none
                        &none &none  &none  &none  &none  &none      &none  &none  &none  &none  &none   &none
                                              &none &none &none      &none &none &none
                >;
        };

        number_layer {
                bindings = <
                        &none &none &kp N7 &kp N8 &kp N9 &none     &none &none    &none    &none     &none      &none
                        &none &none &kp N4 &kp N5 &kp N6 &none     &none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none
                        &none &none &kp N1 &kp N2 &kp N3 &none     &none &none    &none    &none     &none      &none
                                      &kp ENTER &kp DOT &kp N0     &none &none &none
            >;
        };

        symbol_layer {
            bindings = <
                &none &kp N1   &kp N2 &kp N3   &kp N4   &kp N5        &kp N6    &kp N7    &kp N8  &kp N9     &kp N0   &none
                &none &kp LBKT &kp LT &kp LBRC &kp LPAR &kp TILDE     &kp MINUS &kp EQUAL &kp SQT &none      &kp PIPE &none
                &none &kp RBKT &kp GT &kp RBRC &kp RPAR &kp GRAVE     &kp UNDER &kp PLUS  &kp DQT &kp PERIOD &kp BSLH &none
                                            &none &kp LSHFT &none     &none &kp RSHFT &none
            >;
        };

        bluetooth_layer {
                bindings = <
                        &none &none &none &none &none &none     &none        &none        &none        &none        &none        &none
                        &none &none &none &none &none &none     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
                        &none &none &none &none &none &none     &none        &none        &none        &none        &bt BT_CLR   &none
                                          &none &none &none     &none &none &none
                >;
        };

        media_layer {
            bindings = <
                &none &kp C_BKLT_TOG   &kp C_BRI_DN &kp C_BRI_UP &none &none     &none &none &none &none &none &none
                &none &kp C_MUTE       &kp C_VOL_DN &kp C_VOL_UP &none &none     &none &none &none &none &none &none
                &none &kp C_PLAY_PAUSE &kp C_PREV   &kp C_NEXT   &none &none     &none &none &none &none &none &none
                                                           &none &none &none     &none &none &none
            >;      
        };

        // template_layer {
        //    bindings = <
        //      &none &none &none &none &none &none     &none &none &none &none &none &none
        //      &none &none &none &none &none &none     &none &none &none &none &none &none
        //      &none &none &none &none &none &none     &none &none &none &none &none &none
        //                        &none &none &none     &none &none &none
        //    >;
        // };
        };
};
