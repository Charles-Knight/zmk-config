/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE_L 0
#define WINDOWS_L 1
#define SCND_L 2
#define AJST_L 3
#define GAME_L 4

/ {
    behaviors {
        hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <200>;
                require-prior-idle-ms = <150>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
        };

        bspc_del: backspace_delete {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp BACKSPACE>, <&kp DELETE>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_RSFT)>;
        };
    };

    combos {
                compatible = "zmk,combos";

                combo_escape {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp ESC>;
                };

                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <27 28>;
                        bindings = <&kp TAB>;
                };

                combo_backspace {
                        timeout-ms = <50>;
                        key-positions = <31 32>;
                        bindings = <&bspc_del>;
                };

                combo_enter {
                        timeout-ms = <50>;
                        key-positions = <32 33>;
                        bindings = <&kp ENTER>;
                };
    };
        
    keymap {
        compatible = "zmk,keymap";

        mac_layer {
            bindings = <
                &kp MINUS &kp N1 &kp N2      &kp N3     &kp N4     &kp N5                     &kp N6      &kp N7     &kp N8     &kp N9      &kp N0   &kp EQUAL
                &kp GRAVE &kp Q  &kp W       &kp E      &kp R      &kp T                      &kp Y       &kp U      &kp I      &kp O       &kp P    &kp BSLH
                &kp ESC   &kp A  &hm LCTRL S &hm LALT D &hm LGUI F &hm GLOBE G                &hm GLOBE H &hm RGUI J &hm RALT K &hm RCTRL L &kp SEMI &kp SQT
                &kp LCTRL &kp Z  &kp X       &kp C      &kp V      &kp B  &kp LBKT   &kp RBKT &kp N       &kp M      &kp COMMA  &kp DOT     &kp FSLH &kp ENTER
                                      &kp LALT &kp LGUI &kp TAB &kp LSHFT   &lt SCND_L SPACE &bspc_del &kp ENTER &mo AJST_L
            >;
        };

        windows_layer {
            bindings = <
                &kp MINUS &kp N1 &kp N2      &kp N3     &kp N4     &kp N5                     &kp N6      &kp N7     &kp N8     &kp N9      &kp N0   &kp EQUAL
                &kp GRAVE &kp Q  &kp W       &kp E      &kp R      &kp T                      &kp Y       &kp U      &kp I      &kp O       &kp P    &kp BSLH
                &kp ESC   &kp A  &hm LCTRL S &hm LALT D &hm LGUI F &hm GLOBE G                &hm GLOBE H &hm RGUI J &hm RALT K &hm RCTRL L &kp SEMI &kp SQT
                &kp LCTRL &kp Z  &kp X       &kp C      &kp V      &kp B  &kp LBKT   &kp RBKT &kp N       &kp M      &kp COMMA  &kp DOT     &kp FSLH &kp ENTER
                                      &kp LALT &kp LGUI &kp TAB &kp LSHFT   &lt SCND_L SPACE &bspc_del &kp ENTER &mo AJST_L
            >;
        };

        secondary_layer {
            bindings = <
                &none  &none &none    &none    &none     &none                 &none &none &none &none &none &none
                &none  &none &kp HOME &kp UP   &kp END   &none                 &none &none &none &none &none &none
                &none  &none &kp LEFT &kp DOWN &kp RIGHT &none                 &none &none &none &none &none &none
                &trans &none &none    &none    &none     &none   &none   &none &none &none &none &none &none &none
                                           &trans &trans &trans &trans   &trans &trans &trans &trans
            >;
        };

        adjust_layer {
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1     &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &none &none &none &none &none &none
                &none      &none        &kp C_BKLT_TOG   &kp C_BRI_DN &kp C_BRI_UP &none               &none &none &none &none &none &none
                &none      &none        &kp C_MUTE       &kp C_VOL_DN &kp C_VOL_UP &none               &none &none &none &none &none &none
                &none      &none        &kp C_PLAY_PAUSE &kp C_PREV   &kp C_NEXT   &none &none   &none &none &none &none &none &none &none
                                                                       &none &none &none &none   &none &none &none &none
            >;
        };

        game_layer {
            bindings = <
                &kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp EQUAL
                &kp ESC   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp BSLH
                &kp TAB   &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp ENTER
                                   &kp LCTRL &kp SPACE &kp LALT &kp LSHFT   &kp SPACE &kp BSPC &none &none
            >;
        };
    };
};
