/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC  0
#define WIN  1
#define SCND 2
#define NUM  3
#define SYM  4
#define FUN  5
#define ADJ  6

/ {
        behaviors {
                bspc_del: backspace_delete {
                        compatible = "zmk,behavior-mod-morph";
                        label = "BACKSPACE_DELETE";
                        #binding-cells = <0>;
                        bindings = <&kp BACKSPACE>, <&kp DELETE>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                        keep-mods = <(MOD_RSFT)>;
                };
        };

        combos {
                compatible = "zmk,combos";
                
                // Left Hand Combos
                combo_escape {
                        timeout-ms = <50>;
                        key-positions = <11 12>;
                        bindings = <&kp ESC>;
                };

                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <12 13>;
                        bindings = <&kp TAB>;
                };

                combo_lctrl {
                        timeout-ms = <50>;
                        key-positions = <1 11>;
                        bindings = <&kp LCTRL>;
                };

                combo_lalt {
                        timeout-ms = <50>;
                        key-positions = <2 12>;
                        bindings = <&kp LALT>;
                };

                combo_lgui {
                        timeout-ms = <50>;
                        key-positions = <3 13>;
                        bindings = <&kp LGUI>;
                };

                combo_lglobe {
                        timeout-ms = <50>;
                        key-positions = <4 14>;
                        bindings = <&kp GLOBE>;
                };

                combo_undo_mac {
                        timeout-ms = <50>;
                        key-positions = <10 20>;
                        bindings = <&kp LG(Z)>;
                        layers = <MAC>;
                };

                combo_undo_win {
                        timeout-ms = <50>;
                        key-positions = <10 20>;
                        bindings = <&kp LC(Z)>;
                        layers = <WIN>;
                };

                combo_cut_mac {
                        timeout-ms = <50>;
                        key-positions = <11 21>;
                        bindings = <&kp LG(X)>;
                        layers = <MAC>;
                };

                combo_cut_win {
                        timeout-ms = <50>;
                        key-positions = <11 21>;
                        bindings = <&kp LC(X)>;
                        layers = <WIN>;
                };

                combo_copy_mac {
                        timeout-ms = <50>;
                        key-positions = <12 22>;
                        bindings = <&kp LG(C)>;
                        layers = <MAC>;
                };

                combo_copy_win {
                        timeout-ms = <50>;
                        key-positions = <12 22>;
                        bindings = <&kp LC(C)>;
                        layers = <WIN>;
                };

                combo_paste_mac {
                        timeout-ms = <50>;
                        key-positions = <13 23>;
                        bindings = <&kp LG(V)>;
                        layers = <MAC>;
                };

                combo_paste_win {
                        timeout-ms = <50>;
                        key-positions = <13 23>;
                        bindings = <&kp LC(V)>;
                        layers = <WIN>;
                };

                // Right Hand Combos
                combo_backspace {
                        timeout-ms = <50>;
                        key-positions = <16 17>;
                        bindings = <&bspc_del>;
                };

                combo_enter {
                        timeout-ms = <50>;
                        key-positions = <17 18>;
                        bindings = <&kp ENTER>;
                };
                
                combo_delete_word_mac{
                        timeout-ms = <50>;
                        key-positions = <16 17 18>;
                        bindings = <&kp LA(BACKSPACE)>;
                        layers = <MAC>;
                };

                combo_delete_word_win{
                        timeout-ms = <50>;
                        key-positions = <16 17 18>;
                        bindings = <&kp LC(BACKSPACE)>;
                        layers = <WIN>;
                };

                combo_capsword{
                        timeout-ms = <50>;
                        key-positions = <6 7 8>;
                        bindings = <&caps_word>;
                };

                combo_rglobe {
                        timeout-ms = <50>;
                        key-positions = <5 15>;
                        bindings = <&kp GLOBE>;
                };

                combo_rgui {
                        timeout-ms = <50>;
                        key-positions = <6 16>;
                        bindings = <&kp RGUI>;
                };

                combo_ralt {
                        timeout-ms = <50>;
                        key-positions = <7 17>;
                        bindings = <&kp RALT>;
                };

                combo_rctrl {
                        timeout-ms = <50>;
                        key-positions = <8 18>;
                        bindings = <&kp RCTRL>;
                };

                combo_left_desktop_mac {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp LC(LEFT_ARROW)>;
                        layers = <MAC>;
                };

                combo_right_desktop_mac {
                        timeout-ms = <50>;
                        key-positions = <27 28>;
                        bindings = <&kp LC(RIGHT_ARROW)>;
                        layers = <MAC>;
                };

                combo_left_desktop_win {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp LC(LG(LEFT_ARROW))>;
                        layers = <WIN>;
                };

                combo_right_desktop_win {
                        timeout-ms = <50>;
                        key-positions = <27 28>;
                        bindings = <&kp LC(LG(RIGHT_ARROW))>;
                        layers = <WIN>;
                };

                combo_layout_change {
                        timeout-ms = <50>;
                        key-positions = <30 33>;
                        bindings = <&tog WIN>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";
                
                mac_layer {
                        display-name = "Mac";
                        bindings = <
                                        &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U &kp I     &kp O   &kp P
                                        &kp A &kp S &kp D &kp F &kp G   &kp H &kp J &kp K     &kp L   &kp SEMI
                                        &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M &kp COMMA &kp DOT &kp FSLH
                                                &lt NUM TAB &kp LSHFT   &lt SCND SPACE &lt ADJ BSPC
                                >;
                };

                win_layer {
                        display-name = "Win";
                        bindings = <
                                        &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U &kp I     &kp O   &kp P
                                        &kp A &kp S &kp D &kp F &kp G   &kp H &kp J &kp K     &kp L   &kp SEMI
                                        &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M &kp COMMA &kp DOT &kp FSLH
                                                &lt NUM TAB &kp LSHFT   &lt SCND SPACE &lt ADJ BSPC
                                >;
                };

                secondary_layer {
                        display-name = "2nd";
                        bindings = <
                                &kp EQUAL &kp HOME &kp UP   &kp END   &kp LBKT    &kp RBKT  &none    &kp GRAVE &none     &kp BSLH
                                &kp MINUS &kp LEFT &kp DOWN &kp RIGHT &none       &sk GLOBE &sk LGUI &sk LALT  &sk LCTRL &kp SQT
                                &kp N1    &kp N2   &kp N3   &kp N4    &kp N5      &kp N6    &kp N7   &kp N8    &kp N9    &kp N0
                                                                  &trans &trans   &trans &trans
                        >;
                };

                number_layer {
                        display-name = "Num";
                        bindings = <
                                &kp FSLH     &kp N7 &kp N8 &kp N9 &kp MINUS   &none &none &none &none &none
                                &kp ASTERISK &kp N4 &kp N5 &kp N6 &kp PLUS    &none &none &none &none &none
                                &kp DOT      &kp N1 &kp N2 &kp N3 &kp N0      &none &none &none &none &none
                                                              &trans &trans   &trans &trans
                        >;
                };

                symbol_layer {
                        display-name = "Sym";
                        bindings = <
                                &none &none &none &none &none   &none &none &none &none &none
                                &none &none &none &none &none   &none &none &none &none &none
                                &none &none &none &none &none   &none &none &none &none &none
                                                &trans &trans   &trans &trans
                        >;
                };

                function_layer {
                        display-name = "Func";
                        bindings = <
                                &none &none &none &none &none   &none &kp F7 &kp F8 &kp F9 &kp F10
                                &none &none &none &none &none   &none &kp F4 &kp F5 &kp F6 &kp F11
                                &none &none &none &none &none   &none &kp F1 &kp F2 &kp F3 &kp F12
                                                &trans &trans   &trans &trans
                        >;
                };

                adjust_layer {
                        display-name = "Adj";
                        bindings = <
                                &bootloader &kp C_BKLT_TOG   &kp C_BRI_DN &kp C_BRI_UP &none   &none        &none        &none        &none        &bootloader
                                &none       &kp C_MUTE       &kp C_VOL_DN &kp C_VOL_UP &none   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                &none       &kp C_PLAY_PAUSE &kp C_PREV   &kp C_NEXT   &none   &none        &none        &none        &none        &bt BT_CLR
                                                                           &none &none   &none &none
                        >;
                };
        };
};