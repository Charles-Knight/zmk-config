/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE_L 0
#define NAV_L  1
#define NUM_L  2
#define FUNC_L 3
#define ADJ_L  4
#define GAME_L 5

/ {
        // Todo: New Behaviors
        //       double tap space to do period, space, one-shot shift
        behaviors {
                bspc_del: backspace_delete {
                        compatible = "zmk,behavior-mod-morph";
                        label = "BACKSPACE_DELETE";
                        #binding-cells = <0>;
                        bindings = <&kp BACKSPACE>, <&kp DELETE>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                        keep-mods = <(MOD_RSFT)>;
                };
        };

        combos {
                compatible = "zmk,combos";
                combo_game_layer {
                        timeout-ms = <50>;
                        key-positions = <11 35>;
                        bindings = <&tog GAME_L>;
                };
        };
        
        // TODO: Power settings... Enable sleep mode like on corne?
        keymap {
                compatible = "zmk,keymap";
                
                // TODO: Change space to mod morph so that shift + space is backspace?
                default_layer {
                       bindings = <
                                &kp EQUAL &kp Q &kp W &kp E &kp R &kp T     &kp Y &kp U &kp I     &kp O   &kp P    &kp GRAVE
                                &kp MINUS &kp A &kp S &kp D &kp F &kp G     &kp H &kp J &kp K     &kp L   &kp SEMI &kp SQT
                                &kp LBKT  &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RBKT
                                             &mo NUM_L &kp LSHFT &lt NAV_L SPACE &kp RSHFT &lt ADJ_L GRAVE
                        >;
                };

                navigation_layer {
                        bindings = <
                                &none &none     &none     &none    &none    &none     &kp ESC  &kp TAB   &bspc_del &kp ENTER &none      &none
                                &none &sk LSHFT &sk LCTRL &sk LALT &sk LGUI &none     &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &caps_word &none
                                &none &kp Z     &kp X     &kp C    &kp V    &none     &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp CAPS   &none
                                                          &trans    &trans    &trans    &trans    &trans
                        >;
                };

                number_layer {
                        bindings = <
                                &none &kp N1    &kp N2    &kp N3   &kp N4   &kp N5     &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &none
                                &none &sk LSHFT &kp LCTRL &kp LALT &kp LGUI &none      &none  &kp N4 &kp N5 &kp N6 &none  &none
                                &none &none     &none     &none    &none    &none      &none  &kp N1 &kp N2 &kp N3 &none  &none
                                                                &trans &trans &trans &trans &trans
                        >;
                };

                function_layer {
                        bindings = <
                                &none  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5     &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &none
                                &trans &none  &none  &none  &none  &none      &none  &none  &none  &none  &none   &none
                                &trans &none  &none  &none  &none  &none      &none  &none  &none  &none  &none   &trans
                                                      &none    &none    &none    &none    &none
                        >;
                };

                adjust_layer {
                        bindings = <
                                &none &none &kp C_BKLT_TOG   &kp C_BRI_DN &kp C_BRI_UP &none     &none        &none        &none        &none        &none        &bootloader
                                &none &none &kp C_MUTE       &kp C_VOL_DN &kp C_VOL_UP &none     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
                                &none &none &kp C_PLAY_PAUSE &kp C_PREV   &kp C_NEXT   &none     &none        &none        &none        &none        &bt BT_CLR   &none
                                                                        &trans    &trans    &trans    &trans    &trans
                        >;
                };

                game_layer {
                        bindings = <
                                &kp ESC    &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U &kp I     &kp O      &kp P         &kp BACKSPACE
                                &kp TAB    &kp A &kp S &kp D &kp F &kp G   &kp H &kp J &kp K     &kp L      &kp SEMI      &kp SQT
                                &kp LSHIFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M &kp COMMA &kp PERIOD &kp BACKSLASH &kp ENTER
                                                  &kp LCTRL &kp SPACE &kp LALT &kp LGUI &tog GAME_L
                        >;
                };
        };
};
